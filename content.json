{"meta":{"title":"Yang's Blog","subtitle":"顺境内敛 逆境不屈","description":null,"author":"Elijah Yang","url":"https://elijahyg.github.io","root":"/"},"pages":[{"title":"About Me","date":"2019-09-13T16:03:11.000Z","updated":"2019-09-16T16:02:39.887Z","comments":false,"path":"about/index.html","permalink":"https://elijahyg.github.io/about/index.html","excerpt":"","text":"进击的处女座菜鸟程序员"},{"title":"All Categories","date":"2019-09-15T15:53:10.129Z","updated":"2019-09-15T15:53:10.113Z","comments":false,"path":"categories/index.html","permalink":"https://elijahyg.github.io/categories/index.html","excerpt":"","text":""},{"title":"All Tags","date":"2019-09-15T15:23:03.403Z","updated":"2019-09-15T15:23:03.395Z","comments":false,"path":"tags/index.html","permalink":"https://elijahyg.github.io/tags/index.html","excerpt":"","text":""},{"title":"Links","date":"2019-09-16T16:04:51.635Z","updated":"2019-09-16T16:04:51.619Z","comments":true,"path":"links/index.html","permalink":"https://elijahyg.github.io/links/index.html","excerpt":"","text":""},{"title":"Book list","date":"2019-09-16T15:49:06.210Z","updated":"2019-09-16T15:49:06.192Z","comments":false,"path":"books/index.html","permalink":"https://elijahyg.github.io/books/index.html","excerpt":"","text":"douban 豆瓣书单douban: user: Yang # 豆瓣用户名 start: 0 # 从哪一条记录开始 count: 100 # 获取豆瓣书单数据条数"},{"title":"Repositories","date":"2019-09-16T16:02:48.450Z","updated":"2019-09-14T12:40:03.724Z","comments":false,"path":"repository/index.html","permalink":"https://elijahyg.github.io/repository/index.html","excerpt":"","text":""}],"posts":[{"title":"python语言起源","slug":"python语言起源","date":"2019-09-16T15:31:15.000Z","updated":"2019-09-16T15:44:00.897Z","comments":true,"path":"2019/09/16/python语言起源/","link":"","permalink":"https://elijahyg.github.io/2019/09/16/python语言起源/","excerpt":"","text":"","categories":[{"name":"Python系列","slug":"Python系列","permalink":"https://elijahyg.github.io/categories/Python系列/"}],"tags":[]},{"title":"Python系列汇总","slug":"Python系列","date":"2019-09-16T15:21:04.000Z","updated":"2019-09-16T15:44:00.870Z","comments":true,"path":"2019/09/16/Python系列/","link":"","permalink":"https://elijahyg.github.io/2019/09/16/Python系列/","excerpt":"","text":"Python_语言_基础篇 前提准备 01-语言起源 02-环境搭建 03-开发工具&amp;Tips","categories":[{"name":"Python系列","slug":"Python系列","permalink":"https://elijahyg.github.io/categories/Python系列/"}],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2019-09-15T15:53:10.156Z","updated":"2019-09-15T15:53:10.158Z","comments":true,"path":"2019/09/15/hello-world/","link":"","permalink":"https://elijahyg.github.io/2019/09/15/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[{"name":"其他","slug":"其他","permalink":"https://elijahyg.github.io/categories/其他/"}],"tags":[]},{"title":"基于Github搭建Hexo个人博客","slug":"基于Github搭建Hexo个人博客","date":"2019-09-13T15:46:44.000Z","updated":"2019-09-15T15:53:10.139Z","comments":true,"path":"2019/09/13/基于Github搭建Hexo个人博客/","link":"","permalink":"https://elijahyg.github.io/2019/09/13/基于Github搭建Hexo个人博客/","excerpt":"","text":"一、准备工作 Github账号 nodejs npm git for windows 二、创建github仓库 创建以你的用户名.github.io的仓库 三、域名绑定(可选)四、配置SSH key 为什么要配置这个呢？因为你提交代码肯定要拥有你的github权限才可以，但是直接使用用户名和密码太不安全了，所以我们使用ssh key来解决本地和服务器的连接问题。 用git bash执行如下命令,如果提示：No such file or directory 说明你是第一次使用git$ cd ~/. ssh #检查本机已存在的ssh密钥 然后连续3次回车，最终会生成一个文件在用户目录下，打开用户目录，找到.ssh\\id_rsa.pub文件，记事本打开并复制里面的内容，打开你的github主页，进入个人设置 -&gt; SSH and GPG keys -&gt; New SSH key；将刚复制的内容粘贴到key那里，title随便填，保存。ssh-keygen -t rsa -C &quot;邮件地址&quot; 测试SSH-Key是否设置成功 12345 ssh -T git@github.com # 注意邮箱地址不用改# 如果提示Are you sure you want to continue connecting (yes/no)?，输入yes，然后会看到：# Hi 【用户名】! You’ve successfully authenticated, but GitHub does not provide shell access.# 看到这个信息说明SSH已配置成功！ 配置全局用户名和邮箱 12$ git config --global user.name &quot;用户名&quot; # 你的github用户名，非昵称$ git config --global user.email &quot;邮箱&quot; # 填写你的github注册邮箱 五、Hexo部分 安装Hexo npm install -g hexo 初始化Hexo 12cd /d/workspaces/hexo/ # 工作目录hexo init 部署、启动服务 12hexo g # 生成hexo s # 启动服务 本地预览问题 1hexo s是开启本地预览服务，打开浏览器访问 http://localhost:4000 即可看到内容，很多人会碰到浏览器一直在转圈但是就是加载不出来的问题，一般情况下是因为端口占用的缘故 六、修改Hexo主题 官网主题https://hexo.io/themes/ 新推荐极简主题https://github.com/aircloud/hexo-theme-aircloud 更换主题(以yilia为例) 12345https://github.com/litten/hexo-theme-yilia - 进入目录下载主题cd /d/workspaces/hexo/git clone https://github.com/litten/hexo-theme-yilia.git themes/yilia 修改配置文件 12修改_config.yml中的theme: landscape改为theme: yilia，然后重新执行hexo g来重新生成。如果出现一些莫名其妙的问题，可以先执行hexo clean来清理一下public的内容，然后再来重新生成和发布。 七、上传到github 修改配置文件 123456...deploy: type: git repository: git@github.com:用户名/用户名.github.io.git branch: master... 安装插件 12# 部署前还需要安装插件，git bash执行npm install hexo-deployer-git --save 提交至Github 12# 如果一切正常，可以执行hexo d将代码上传至github，之后就可以打开https://用户名.github.io/浏览你的个人博客了hexo d 八、常用hexo命令 常见命令 1234567hexo new &quot;postName&quot; #新建文章hexo new page &quot;pageName&quot; #新建页面hexo generate #生成静态页面至public目录hexo server #开启预览访问端口（默认端口4000，&apos;ctrl + c&apos;关闭server）hexo deploy #部署到GitHubhexo help # 查看帮助hexo version #查看Hexo的版本 缩写 1234hexo n == hexo newhexo g == hexo generatehexo s == hexo serverhexo d == hexo deploy 组合命令 12hexo s -g #生成并本地预览hexo d -g #生成并上传 九、写博客 写博客 12# 定位到hexo目录，执行下面语句，hexo会帮我们在_posts下生成相关md文件，我们只需要打开这个文件就可以开始写博客了hexo new &apos;my-first-blog&apos; 一般完整格式如下 123456789---title: postName #文章页面上的显示名称，一般是中文date: 2013-12-02 15:30:16 #文章生成时间，一般不改，当然也可以任意修改categories: 默认分类 #分类tags: [tag1,tag2,tag3] #文章标签，可空，多标签请用格式，注意:后面有个空格description: 附加一段文章摘要，字数最好在140字以内，会出现在meta的description里面---以下是正文","categories":[{"name":"其他","slug":"其他","permalink":"https://elijahyg.github.io/categories/其他/"}],"tags":[]}]}